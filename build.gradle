plugins {
    id "java"
}

group = "io.github.evercraftmc"
version = core_version

repositories {
    mavenCentral()
}

subprojects {
    group = "io.github.evercraftmc.evercraft"

    repositories {
        mavenCentral()
    }

    java {
        toolchain {
            languageVersion = JavaLanguageVersion.of(java_version)
        }
    }

    tasks.withType(JavaCompile).configureEach {
        options.encoding = "UTF-8"
    }
}

interface UploadTaskParameters extends WorkParameters {
    Property<String> getFromPath();

    Property<String> getToPath();
}

abstract class UploadTask implements WorkAction<UploadTaskParameters> {
    @Override
    void execute() {
        def fromPath = getParameters().getFromPath().get()
        def toPath = getParameters().getToPath().get()

        def processBuilder = new ProcessBuilder().command("rsync", "-q", fromPath, toPath).redirectOutput(ProcessBuilder.Redirect.PIPE).redirectError(ProcessBuilder.Redirect.PIPE).redirectInput(ProcessBuilder.Redirect.PIPE)
        processBuilder.environment().putAll(System.getenv())
        def process = processBuilder.start()

        int status = process.waitFor()

        if (status != 0) {
            def stderr = new String(process.getErrorStream().readAllBytes())
            throw new RuntimeException("Process did not exit with status code 0 but rather " + status + ".\n" + stderr)
        }
    }
}

import javax.inject.Inject

abstract class UploadAllTask extends DefaultTask {
    @Inject
    abstract WorkerExecutor getWorkerExecutor();

    @Input
    @Optional()
    @Option(option = "uploadMask", description = "Configures the server upload mask.")
    abstract Property<String> getUploadMask();

    @TaskAction
    void execute() {
        def workQueue = getWorkerExecutor().noIsolation()

        def path = System.getenv("EVERCRAFT_PATH")
        if (!path.endsWith("/")) {
            path = path + "/"
        }

        def servers = System.getenv("EVERCRAFT_SERVERS").split(";")

        for (def serverDef : servers) {
            def server = serverDef.split(":", 4)

            def serverId = server[0]
            def serverName = server[1]
            def moduleNames = server[2].split(",")
            def uploadPath = server[3]
            if (!uploadPath.startsWith("/")) {
                uploadPath = "/" + uploadPath
            }
            if (!uploadPath.endsWith("/")) {
                uploadPath = uploadPath + "/"
            }

            for (def moduleName : moduleNames) {
                def fromPath = project.project(":" + moduleName).tasks.fatJar.outputs.files[0].toPath().toAbsolutePath().toString()
                def toPath = path + serverId + uploadPath + "EverCraft-" + moduleName + ".jar"

                workQueue.submit(UploadTask.class, (parameters) -> {
                    parameters.getFromPath().set(fromPath)
                    parameters.getToPath().set(toPath)
                })
            }
        }
    }
}

tasks.register("upload", UploadAllTask) {
    dependsOn subprojects.collect {
        it.tasks.fatJar
    }
}